name: octo-push-dx

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  MASTER_BRANCH: master

on:
  push:
    branches:
      - "**"  # Trigger the action on any push to any branch

jobs:
  build:
    name: Build Image and Push to Octo
    runs-on: ubuntu-latest

    permissions:
      id-token: write         # Allow OIDC authentication to assume the IAM role
      contents: write         # Allow GitHub to push content to the repo

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2  # Checkout the code from GitHub

      - name: Set up .NET SDK
        uses: variant-inc/actions-dotnet@v2
        with:
          dotnet-version: 8.0.x  # Set up .NET SDK 8.0

      - name: Build and Publish .NET Application
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet publish --configuration Release --output ./out

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin <aws_account_id>.dkr.ecr.us-east-1.amazonaws.com

      - name: Build Docker Image
        run: |
          docker build -t usxpress/driver-hos-state-api:latest .

      - name: Tag Docker Image
        run: |
          docker tag usxpress/driver-hos-state-api:latest <aws_account_id>.dkr.ecr.us-east-1.amazonaws.com/usxpress/driver-hos-state-api:latest

      - name: Push Docker Image to ECR
        run: |
          docker push <aws_account_id>.dkr.ecr.us-east-1.amazonaws.com/usxpress/driver-hos-state-api:latest

      # This step sets up the project in Octopus Deploy
      - name: Release ðŸ›¸
        uses: variant-inc/actions-octopus@v3
        with:
          deploy_yaml_dir: .octopus/deploy   # Specify the path to the Octopus deploy YAML file
